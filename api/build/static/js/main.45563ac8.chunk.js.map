{"version":3,"sources":["components/AppBar.jsx","components/DroppableSection.jsx","components/Urls.jsx","components/Groups.jsx","components/UrlForm.jsx","components/GroupForm.jsx","api/urlRequest.js","api/groupRequest.js","components/MainDisplay.jsx","components/Main.jsx","components/Redirect.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","DroppableSection","droppableId","urls","deleteUrl","provided","Paper","elevation","droppableProps","ref","innerRef","style","minHeight","map","url","index","List","dense","draggableId","String","id","ListItem","draggableProps","dragHandleProps","ListItemAvatar","Avatar","alt","fullUrl","src","favicons","ListItemText","primary","alias","shortUrl","secondary","component","counter","Tooltip","IconButton","aria-label","onClick","shortURL","window","open","focus","navigator","clipboard","writeText","location","host","placeholder","Urls","Grid","container","item","xs","margin","memo","Groups","groups","deleteGroup","group","md","name","UrlSchema","Yup","shape","matches","required","min","max","width","UrlForm","addUrl","direction","justify","alignItems","initialValues","validationSchema","onSubmit","minWidth","padding","TextField","type","label","InputLabelProps","shrink","Button","color","endIcon","GroupSchema","GroupForm","addGroup","getNoGroupUrls","a","axios","get","data","newData","addNewUrl","values","post","deleteUrlById","delete","patchUrl","fields","patch","incrementUrlCounter","getGroupUrls","newUrls","addNewGroup","deleteGroupById","MainDisplay","useState","groupOfUrls","setGroupOfUrls","useEffect","prev","console","log","getUrls","getGroup","rest","setSubmitting","setErrors","resetForm","newUrl","message","submit","deletedGroup","find","Number","filter","error","groupId","groupIndex","findIndex","newGroup","findArray","array","updateUrlGroup","urlId","formatGroupId","onDragEnd","result","source","destination","sourceArray","splice","removed","newGroups","destinationArray","sourceIndex","desinationIndex","lg","sm","Main","overflowX","Redirect","useParams","history","useHistory","then","includes","push","catch","err","fetchData","App","CssBaseline","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45563ac8.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"body1\" className={classes.title}>\n            Short Link\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  IconButton,\n  ListItemText,\n  ListItem,\n  List,\n  Paper,\n  ListItemAvatar,\n  Avatar,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\n\nfunction DroppableSection({ droppableId, urls, deleteUrl }) {\n  const copiedToClipboard = (shortURL) => {\n    navigator.clipboard.writeText(`${window.location.host}/${shortURL}`);\n  };\n  const goesTo = (shortURL) => {\n    const win = window.open(shortURL, \"_blank\");\n    win.focus();\n  };\n\n  return (\n    <Droppable droppableId={droppableId}>\n      {(provided) => {\n        return (\n          <Paper\n            elevation={3}\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            style={{ minHeight: \"250px\" }}\n          >\n            {urls.map((url, index) => {\n              return (\n                <List key={url.id} dense={true}>\n                  <Draggable\n                    key={url.id}\n                    draggableId={String(url.id)}\n                    index={index}\n                  >\n                    {(provided) => (\n                      <ListItem\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                      >\n                        <ListItemAvatar>\n                          <Avatar alt={url.fullUrl} src={url.favicons} />\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary={url.alias || url.shortUrl}\n                          secondary={\n                            <>\n                              <Typography component=\"span\" variant=\"body1\">\n                                {url.fullUrl || null}\n                              </Typography>\n                              <br />\n                              <Typography component=\"span\" variant=\"caption\">\n                                {`Redirected: ${url.counter}`}\n                              </Typography>\n                            </>\n                          }\n                        />\n\n                        <Tooltip title=\"Go To\">\n                          <IconButton\n                            aria-label=\"redirect\"\n                            onClick={() => goesTo(url?.shortUrl)}\n                          >\n                            <ExitToAppIcon />\n                          </IconButton>\n                        </Tooltip>\n\n                        <Tooltip title=\"copy\">\n                          <IconButton\n                            aria-label=\"copy\"\n                            onClick={() => copiedToClipboard(url?.shortUrl)}\n                          >\n                            <FileCopyIcon />\n                          </IconButton>\n                        </Tooltip>\n                        <Tooltip title=\"delete\">\n                          <IconButton\n                            aria-label=\"delete\"\n                            onClick={() => deleteUrl(url.id)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </ListItem>\n                    )}\n                  </Draggable>\n                </List>\n              );\n            })}\n            {provided.placeholder}\n          </Paper>\n        );\n      }}\n    </Droppable>\n  );\n}\n\nexport default DroppableSection;\n","import React, { memo } from \"react\";\n\nimport { Grid } from \"@material-ui/core\";\nimport DS from \"./DroppableSection\";\n\nfunction Urls({ urls, deleteUrl }) {\n  return (\n    <>\n      <Grid container item xs={12} spacing={1} style={{ margin: \"10px 0\" }}>\n        <Grid item xs={12}>\n          <DS droppableId=\"noGroupUrls\" urls={urls} deleteUrl={deleteUrl} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nexport default memo(Urls);\n","import React, { memo } from \"react\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { Grid, IconButton, Paper, Typography } from \"@material-ui/core\";\nimport DS from \"./DroppableSection\";\n\nfunction Groups({ groups, deleteGroup, deleteUrl }) {\n  return (\n    <>\n      {groups.map((group) => {\n        return (\n          <Grid container item xs={12} md={6} key={group.id} spacing={1}>\n            <Grid item xs={12}>\n              <Paper elevation={3}>\n                <Typography variant=\"body1\">\n                  {group.name}\n                  {group.id}\n                </Typography>\n\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => deleteGroup(group.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <DS\n                droppableId={`${group.id}`}\n                urls={group.urls}\n                deleteUrl={deleteUrl}\n              />\n            </Grid>\n          </Grid>\n        );\n      })}\n    </>\n  );\n}\nexport default memo(Groups);\n","import React from \"react\";\nimport { TextField } from \"formik-material-ui\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Paper, Grid } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst UrlSchema = Yup.object().shape({\n  fullUrl: Yup.string()\n    .matches(\n      /((https?):\\/\\/)?(www.)?[a-z0-9-]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#-]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n      \"Enter correct url!\"\n    )\n    .required(\"Required\"),\n  shortUrl: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\"),\n  alias: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: \"25ch\",\n    },\n  },\n}));\n\nfunction UrlForm({ addUrl }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <Formik\n            initialValues={{\n              fullUrl: \"\",\n              shortUrl: \"\",\n              alias: \"\",\n            }}\n            validationSchema={UrlSchema}\n            onSubmit={addUrl}\n          >\n            <Paper elevation={3} style={{ minWidth: \"240px\" }}>\n              <Form className={classes.root} style={{ padding: \".5em\" }}>\n                <Field\n                  component={TextField}\n                  name=\"fullUrl\"\n                  type=\"text\"\n                  label=\"Full Url\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Field\n                  component={TextField}\n                  name=\"shortUrl\"\n                  type=\"text\"\n                  label=\"Short Url\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n\n                <Field\n                  component={TextField}\n                  name=\"alias\"\n                  type=\"text\"\n                  label=\"Alias\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  endIcon={<SaveIcon />}\n                >\n                  Submit\n                </Button>\n              </Form>\n            </Paper>\n          </Formik>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default UrlForm;\n","import React from \"react\";\nimport { TextField } from \"formik-material-ui\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik, Field, Form } from \"formik\";\nimport { Button, Paper, Grid } from \"@material-ui/core\";\n\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport * as Yup from \"yup\";\n\nconst GroupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\n\nfunction GroupForm({ addGroup }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <Formik\n            initialValues={{\n              name: \"\",\n            }}\n            validationSchema={GroupSchema}\n            onSubmit={addGroup}\n          >\n            <Paper elevation={3} style={{ minWidth: \"240px\" }}>\n              <Form className={classes.root} style={{ padding: \".5em\" }}>\n                <Field\n                  component={TextField}\n                  name=\"name\"\n                  type=\"text\"\n                  label=\"Group Name\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  endIcon={<SaveIcon />}\n                >\n                  Submit\n                </Button>\n              </Form>\n            </Paper>\n          </Formik>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default GroupForm;\n","import axios from \"axios\";\n\nexport const getNoGroupUrls = async () => {\n  const { data = [] } = await axios.get(\"/api/urls\");\n  const newData = data?.map((url) => {\n    return {\n      ...url,\n      favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${url.fullUrl}`,\n    };\n  });\n  return newData;\n};\n\nexport const addNewUrl = async (values) => {\n  const { data } = await axios.post(\"/api/urls\", { ...values });\n\n  const newData = {\n    ...data,\n    favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${data.fullUrl}`,\n  };\n\n  return newData;\n};\n\nexport const deleteUrlById = async (id) => {\n  const { data } = await axios.delete(`/api/urls/${id}`);\n  return data;\n};\n\nexport const patchUrl = async (id, fields) => {\n  const { data } = await axios.patch(`/api/urls/${id}`, fields);\n  return data;\n};\n\nexport const incrementUrlCounter = async (id) => {\n  const { data } = await axios.patch(`/api/urls/${id}/count`);\n  return data;\n};\n","import axios from \"axios\";\n\nexport const getGroupUrls = async () => {\n  const { data = [] } = await axios.get(\"/api/groups\");\n\n  const newData = data?.map((group) => {\n    const newUrls = group.urls?.map((url) => {\n      return {\n        ...url,\n        favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${url.fullUrl}`,\n      };\n    });\n    return { ...group, urls: newUrls };\n  });\n\n  return newData;\n};\n\nexport const addNewGroup = async (values) => {\n  const { data } = await axios.post(\"/api/groups\", { ...values });\n  return data;\n};\n\nexport const deleteGroupById = async (id) => {\n  const { data } = await axios.delete(`/api/groups/${id}`);\n  return data;\n};\n","import { Grid } from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Urls from \"./Urls\";\nimport Group from \"./Groups\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport UrlForm from \"./UrlForm\";\nimport GroupForm from \"./GroupForm\";\n\nimport {\n  getNoGroupUrls,\n  addNewUrl,\n  deleteUrlById,\n  patchUrl,\n} from \"../api/urlRequest\";\nimport {\n  getGroupUrls,\n  addNewGroup,\n  deleteGroupById,\n} from \"../api/groupRequest\";\n\nfunction MainDisplay() {\n  const [groupOfUrls, setGroupOfUrls] = useState({ urls: [], groups: [] });\n\n  useEffect(() => {\n    const getUrls = async () => {\n      try {\n        const urls = await getNoGroupUrls();\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls };\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUrls();\n  }, []);\n\n  useEffect(() => {\n    const getGroup = async () => {\n      try {\n        const groups = await getGroupUrls();\n        setGroupOfUrls((prev) => {\n          return { ...prev, groups };\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getGroup();\n  }, []);\n\n  const addUrl = async (\n    { shortUrl, alias, ...rest },\n    { setSubmitting, setErrors, resetForm }\n  ) => {\n    try {\n      const fields = { ...rest };\n      if (shortUrl) {\n        fields.shortUrl = shortUrl;\n      }\n      if (alias) {\n        fields.alias = alias;\n      }\n      const newUrl = await addNewUrl(fields);\n      resetForm({});\n      setGroupOfUrls((prev) => {\n        return { ...prev, urls: [...prev.urls, newUrl] };\n      });\n    } catch (error) {\n      console.log(error, error.message);\n      setSubmitting(false);\n      setErrors({ submit: error.message });\n    }\n  };\n\n  const addGroup = async (values, { setSubmitting, setErrors, resetForm }) => {\n    try {\n      const data = await addNewGroup(values);\n      resetForm({});\n      setGroupOfUrls((prev) => {\n        return { ...prev, groups: [...prev.groups, { ...data, urls: [] }] };\n      });\n    } catch (error) {\n      setSubmitting(false);\n      setErrors({ submit: error.message });\n    }\n  };\n\n  const deleteGroup = async (id) => {\n    try {\n      const data = deleteGroupById(id);\n      if (data) {\n        const deletedGroup = groupOfUrls.groups?.find(\n          (group) => group.id === Number(id)\n        );\n\n        setGroupOfUrls((prev) => {\n          return {\n            ...prev,\n            groups: [...prev.groups].filter((group) => {\n              return group.id !== id;\n            }),\n            urls: [...prev.urls, ...deletedGroup.urls],\n          };\n        });\n\n        // setGroups((prev) =>\n        //   [...prev]?.filter((group) => {\n        //     return group.id !== id;\n        //   })\n        // );\n        // setUrls((prev) => [...prev, ...deletedGroup.urls]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteUrl = async (id, groupId = null) => {\n    try {\n      const data = await deleteUrlById(id);\n      if (data) {\n        if (!groupId) {\n          const newUrls = groupOfUrls.urls.filter((url) => url.id !== id);\n          setGroupOfUrls((prev) => {\n            return { ...prev, urls: newUrls };\n          });\n        } else {\n          const groupIndex = groupOfUrls.groups?.findIndex((group) => {\n            return group.id === groupId;\n          });\n          const newGroup = [...groupOfUrls?.groups];\n          const newUrls = newGroup[groupIndex].urls?.filter(\n            (url) => url.id !== id\n          );\n          newGroup[groupIndex].urls = newUrls;\n          setGroupOfUrls((prev) => {\n            return { ...prev, groups: newGroup };\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const findArray = (id) => {\n    let array;\n    if (id !== \"noGroupUrls\") {\n      const group = groupOfUrls.groups.find((group) => group.id === Number(id));\n      array = group.urls;\n    } else {\n      array = groupOfUrls.urls;\n    }\n    return [...array];\n  };\n\n  const updateUrlGroup = async (urlId, groupId) => {\n    const formatGroupId = groupId === \"noGroupUrls\" ? null : groupId;\n    await patchUrl(urlId, { groupId: formatGroupId });\n  };\n  const onDragEnd = async (result) => {\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const sourceArray = findArray(source.droppableId);\n      const [removed] = sourceArray.splice(source.index, 1);\n      sourceArray.splice(destination.index, 0, removed);\n      if (source.droppableId === \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls: sourceArray };\n        });\n      }\n      if (source.droppableId !== \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n          const groupIndex = newGroups.findIndex((group) => {\n            return group.id === Number(source.droppableId);\n          });\n          newGroups[groupIndex] = {\n            ...newGroups[groupIndex],\n            urls: sourceArray,\n          };\n          return { ...prev, groups: newGroups };\n        });\n      }\n    } else {\n      const sourceArray = findArray(source.droppableId);\n      const destinationArray = findArray(destination.droppableId);\n      const [removed] = sourceArray.splice(source.index, 1);\n\n      destinationArray.splice(destination.index, 0, removed);\n\n      if (source.droppableId === \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n\n          const groupIndex = newGroups.findIndex(\n            (group) => group.id === Number(destination.droppableId)\n          );\n          newGroups[groupIndex] = {\n            ...newGroups[groupIndex],\n            urls: destinationArray,\n          };\n          return { urls: sourceArray, groups: newGroups };\n        });\n      }\n      if (source.droppableId !== \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n          let newUrls = [...prev.urls];\n\n          const sourceIndex = newGroups.findIndex(\n            (group) => group.id === Number(source.droppableId)\n          );\n          const desinationIndex = newGroups.findIndex(\n            (group) => group.id === Number(destination.droppableId)\n          );\n          newGroups[sourceIndex] = {\n            ...newGroups[sourceIndex],\n            urls: sourceArray,\n          };\n          if (desinationIndex !== -1) {\n            newGroups[desinationIndex] = {\n              ...newGroups[desinationIndex],\n              urls: destinationArray,\n            };\n          } else {\n            newUrls = destinationArray;\n          }\n          return { urls: newUrls, groups: newGroups };\n        });\n      }\n      await updateUrlGroup(removed.id, destination.droppableId);\n    }\n  };\n\n  return (\n    <div style={{ margin: \"20px 0\" }}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid container item md={12} lg={4} spacing={2}>\n          <Grid item xs={12} sm={6} lg={12}>\n            <UrlForm addUrl={addUrl} />\n          </Grid>\n          <Grid item xs={12} sm={6} lg={12}>\n            <GroupForm addGroup={addGroup} />\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          md={12}\n          lg={8}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Grid\n              container\n              item\n              xs={6}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Urls urls={groupOfUrls.urls} deleteUrl={deleteUrl} />\n            </Grid>\n\n            <Grid\n              container\n              item\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Group\n                groups={groupOfUrls.groups}\n                deleteGroup={deleteGroup}\n                deleteUrl={deleteUrl}\n              />\n            </Grid>\n          </DragDropContext>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default MainDisplay;\n","import React from \"react\";\n\nimport AppBar from \"./AppBar\";\nimport MainDisplay from \"./MainDisplay\";\n\nfunction Main() {\n  return (\n    <div style={{ overflowX: \"hidden\" }}>\n      <AppBar />\n      <MainDisplay />\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { incrementUrlCounter } from \"../api/urlRequest\";\n\nfunction Redirect() {\n  let { shortUrl } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios\n        .get(`/api/urls/${shortUrl}`)\n        .then(async ({ data }) => {\n          console.log(data);\n          if (data?.fullUrl) {\n            await incrementUrlCounter(data?.id);\n            if (data?.fullUrl.includes(\"http\")) {\n              return (window.location = data?.fullUrl);\n            }\n            return (window.location = \"//\" + data?.fullUrl);\n          } else {\n            history.push(\"/\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    fetchData();\n  }, [shortUrl, history]);\n  return <></>;\n}\n\nexport default Redirect;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Main from \"./components/Main\";\nimport Redirect from \"./components/Redirect\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/:shortUrl\" component={Redirect} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}