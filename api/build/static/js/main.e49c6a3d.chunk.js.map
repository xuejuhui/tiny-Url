{"version":3,"sources":["components/AppBar.jsx","components/Urls.jsx","components/Groups.jsx","components/UrlForm.jsx","components/GroupForm.jsx","api/urlRequest.js","api/groupRequest.js","components/MainDisplay.jsx","components/Main.jsx","components/Redirect.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","Urls","urls","deleteUrl","history","useHistory","Grid","container","item","xs","style","margin","droppableId","provided","Paper","elevation","droppableProps","ref","innerRef","minHeight","map","url","index","List","dense","draggableId","String","id","ListItem","draggableProps","dragHandleProps","ListItemAvatar","Avatar","alt","fullUrl","src","favicons","ListItemText","primary","shortUrl","secondary","Tooltip","IconButton","aria-label","onClick","shortURL","push","pathname","navigator","clipboard","writeText","window","location","host","placeholder","memo","Groups","groups","deleteGroup","console","log","group","md","name","link","alias","UrlSchema","Yup","shape","matches","required","min","max","width","UrlForm","addUrl","direction","justify","alignItems","initialValues","validationSchema","onSubmit","padding","component","TextField","type","label","InputLabelProps","shrink","FormGroup","row","Button","color","endIcon","GroupSchema","GroupForm","addGroup","getNoGroupUrls","a","axios","get","data","newData","addNewUrl","values","post","deleteUrlById","delete","patchUrl","fields","patch","getGroupUrls","newUrls","addNewGroup","deleteGroupById","MainDisplay","useState","groupOfUrls","setGroupOfUrls","useEffect","prev","getUrls","getGroup","newUrl","deletedGroup","find","Number","filter","error","groupId","groupIndex","findIndex","newGroup","findArray","array","updateUrlGroup","urlId","formatGroupId","onDragEnd","result","source","destination","sourceArray","splice","removed","newGroups","destinationArray","Main","Redirect","useParams","then","catch","err","fetchData","App","CssBaseline","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IACtB,IAAMC,EAAUV,IAEhB,OACE,qBAAKW,UAAWD,EAAQP,KAAxB,SACE,cAACS,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQL,UAAWD,EAAQF,MAA/C,8B,gMCLV,SAASS,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACdC,EAAUC,cAQhB,OACE,mCACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIlB,QAAS,EAAGmB,MAAO,CAAEC,OAAQ,UAA1D,SACE,cAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAWG,YAAY,cAAvB,SACG,SAACC,GACA,OACE,eAACC,EAAA,EAAD,yBACEC,UAAW,GACPF,EAASG,gBAFf,IAGEC,IAAKJ,EAASK,SACdR,MAAO,CAAES,UAAW,SAJtB,UAMGjB,EAAKkB,KAAI,SAACC,EAAKC,GACd,OACE,cAACC,EAAA,EAAD,CAAmBC,OAAO,EAA1B,SACE,cAAC,IAAD,CAEEC,YAAaC,OAAOL,EAAIM,IACxBL,MAAOA,EAHT,SAKG,SAACT,GAAD,OACC,eAACe,EAAA,EAAD,qCACEX,IAAKJ,EAASK,UACVL,EAASgB,gBACThB,EAASiB,iBAHf,cAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,IAAKZ,EAAIa,QAASC,IAAKd,EAAIe,aAErC,cAACC,EAAA,EAAD,CACEC,QAASjB,EAAIkB,SACbC,UAAWnB,EAAIa,QAAJ,OAAcb,QAAd,IAAcA,OAAd,EAAcA,EAAKa,QAAU,OAG1C,cAACO,EAAA,EAAD,CAASjD,MAAM,QAAf,SACE,cAACkD,EAAA,EAAD,CACEC,aAAW,WACXC,QAAS,kBAzCzBC,EAyCqC,OAACxB,QAAD,IAACA,OAAD,EAACA,EAAKkB,cAxCzDnC,EAAQ0C,KAAK,CAAEC,SAAUF,IADZ,IAACA,GAuCc,SAIE,cAAC,IAAD,QAIJ,cAACJ,EAAA,EAAD,CAASjD,MAAM,OAAf,SACE,cAACkD,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,kBArDdC,EAsDwB,OAACxB,QAAD,IAACA,OAAD,EAACA,EAAKkB,cArDvDS,UAAUC,UAAUC,UAApB,UAAiCC,OAAOC,SAASC,KAAjD,YAAyDR,IADjC,IAACA,GAmDG,SAME,cAAC,IAAD,QAGJ,cAACJ,EAAA,EAAD,CAASjD,MAAM,SAAf,SACE,cAACkD,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,kBAAMzC,EAAUkB,EAAIM,KAF/B,SAIE,cAAC,IAAD,cA1CHN,EAAIM,KAFFN,EAAIM,OAqDlBd,EAASyC,yBAUbC,qBAAKtD,GCyBLuD,MAhHf,YAAqD,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,YAAavD,EAAa,EAAbA,UAC/BC,EAAUC,cAQhB,OADAsD,QAAQC,MAEN,mCACGH,EAAOrC,KAAI,SAACyC,GACX,OACE,eAACvD,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIqD,GAAI,EAAkBvE,QAAS,EAA5D,UACE,cAACe,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACK,EAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,eAAChB,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACG6D,EAAME,KACNF,EAAMlC,MAGT,cAACe,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,kBAAMc,EAAYG,EAAMlC,KAFnC,SAIE,cAAC,IAAD,WAIN,cAACrB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAWG,YAAW,UAAKiD,EAAMlC,IAAjC,SACG,SAACd,GAAc,IAAD,EACb,OACE,eAACC,EAAA,EAAD,yBACEC,UAAW,GACPF,EAASG,gBAFf,IAGEC,IAAKJ,EAASK,SACdR,MAAO,CAAES,UAAW,SAJtB,oBAMG0C,EAAM3D,YANT,aAMG,EAAYkB,KAAI,SAAC4C,EAAM1C,GACtB,OACE,cAACC,EAAA,EAAD,CAAoBC,OAAO,EAA3B,SACE,cAAC,IAAD,CAEEC,YAAaC,OAAOsC,EAAKrC,IACzBL,MAAOA,EAHT,SAKG,SAACT,GAAD,OACC,eAACe,EAAA,EAAD,qCACEX,IAAKJ,EAASK,UACVL,EAASgB,gBACThB,EAASiB,iBAHf,cAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,IAAK+B,EAAK9B,QACVC,IAAK6B,EAAK5B,aAId,cAACC,EAAA,EAAD,CACEC,QAAS0B,EAAKC,OAASD,EAAKzB,SAC5BC,UAAWwB,EAAK9B,SAAW,OAG7B,cAACO,EAAA,EAAD,CAASjD,MAAM,QAAf,SACE,cAACkD,EAAA,EAAD,CACEC,aAAW,WACXC,QAAS,kBA/D7BC,EA+DyC,OAACmB,QAAD,IAACA,OAAD,EAACA,EAAMzB,cA9D9DnC,EAAQ0C,KAAK,CAAEC,SAAUF,IADZ,IAACA,GA6DkB,SAIE,cAAC,IAAD,QAIJ,cAACJ,EAAA,EAAD,CAASjD,MAAM,OAAf,SACE,cAACkD,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,kBA3ElBC,EA4E4B,OAACmB,QAAD,IAACA,OAAD,EAACA,EAAMzB,cA3E5DS,UAAUC,UAAUC,UAApB,UAAiCC,OAAOC,SAASC,KAAjD,YAAyDR,IADjC,IAACA,GAyEO,SAME,cAAC,IAAD,QAGJ,cAACJ,EAAA,EAAD,CAASjD,MAAM,SAAf,SACE,cAACkD,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,kBACPzC,EAAU6D,EAAKrC,GAAIkC,EAAMlC,KAH7B,SAME,cAAC,IAAD,cAhDHqC,EAAKrC,KAFHqC,EAAKrC,OA2DnBd,EAASyC,uBAvFmBO,EAAMlC,U,2DCxBnDuC,EAAYC,MAAaC,MAAM,CACnClC,QAASiC,MACNE,QACC,oHACA,sBAEDC,SAAS,YACZ/B,SAAU4B,MAAaI,IAAI,EAAG,cAAcC,IAAI,GAAI,aACpDP,MAAOE,MAAaI,IAAI,EAAG,cAAcC,IAAI,GAAI,eAG7CxF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPwB,OAAQzB,EAAMK,QAAQ,GACtBkF,MAAO,aAyEEC,MApEf,YAA8B,IAAXC,EAAU,EAAVA,OACXjF,EAAUV,IAEhB,OACE,mCACE,cAACsB,EAAA,EAAD,CAAMC,WAAS,EAACqE,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAA5D,SACE,cAACxE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CACEsE,cAAe,CACb7C,QAAS,GACTK,SAAU,GACV0B,MAAO,IAETe,iBAAkBd,EAClBe,SAAUN,EAPZ,SASE,cAAC7D,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACE,eAAC,IAAD,CAAMpB,UAAWD,EAAQP,KAAMuB,MAAO,CAAEwE,QAAS,QAAjD,UACE,cAAC,IAAD,CACEC,UAAWC,IACXrB,KAAK,UACLsB,KAAK,OACLC,MAAM,WACNtF,QAAQ,WACRuF,gBAAiB,CACfC,QAAQ,KAGZ,cAAC,IAAD,CACEL,UAAWC,IACXrB,KAAK,WACLsB,KAAK,OACLC,MAAM,YACNtF,QAAQ,WACRuF,gBAAiB,CACfC,QAAQ,KAIZ,cAAC,IAAD,CACEL,UAAWC,IACXrB,KAAK,QACLsB,KAAK,OACLC,MAAM,QACNtF,QAAQ,WACRuF,gBAAiB,CACfC,QAAQ,KAGZ,cAACC,EAAA,EAAD,CAAWC,KAAG,EAAC/F,UAAWD,EAAQP,KAAlC,SACE,cAACwG,EAAA,EAAD,CACE3F,QAAQ,YACR4F,MAAM,UACNP,KAAK,SACLQ,QAAS,cAAC,IAAD,IAJX,oCCtEZC,EAAc3B,MAAaC,MAAM,CACrCL,KAAMI,MACHI,IAAI,EAAG,cACPC,IAAI,GAAI,aACRF,SAAS,cAGRtF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPwB,OAAQzB,EAAMK,QAAQ,GACtBkF,MAAO,aAoDEsB,OA/Cf,YAAkC,IAAbC,EAAY,EAAZA,SACbtG,EAAUV,IAEhB,OACE,mCACE,cAACsB,EAAA,EAAD,CAAMC,WAAS,EAACqE,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAA5D,SACE,cAACxE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CACEsE,cAAe,CACbhB,KAAM,IAERiB,iBAAkBc,EAClBb,SAAUe,EALZ,SAOE,cAAClF,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACE,eAAC,IAAD,CAAMpB,UAAWD,EAAQP,KAAzB,UACE,cAACsG,EAAA,EAAD,CAAWC,KAAG,EAAC/F,UAAWD,EAAQP,KAAlC,SACE,cAAC,IAAD,CACEgG,UAAWC,IACXrB,KAAK,OACLsB,KAAK,OACLC,MAAM,aACNtF,QAAQ,WACRuF,gBAAiB,CACfC,QAAQ,OAId,cAACC,EAAA,EAAD,CAAWC,KAAG,EAAC/F,UAAWD,EAAQP,KAAlC,SACE,cAACwG,EAAA,EAAD,CACE3F,QAAQ,YACR4F,MAAM,UACNP,KAAK,SACLQ,QAAS,cAAC,IAAD,IAJX,oC,oBCpDLI,GAAc,uCAAG,kCAAAC,EAAA,sEACAC,KAAMC,IAAI,aADV,2BACpBC,KACFC,EAFsB,QACpBD,OADoB,MACb,GADa,aAEZA,OAFY,EAEZA,EAAMjF,KAAI,SAACC,GACzB,OAAO,2BACFA,GADL,IAEEe,SAAS,uDAAD,OAAyDf,EAAIa,cAL7C,kBAQrBoE,GARqB,2CAAH,qDAWdC,GAAS,uCAAG,WAAOC,GAAP,mBAAAN,EAAA,sEACAC,KAAMM,KAAK,YAAX,eAA6BD,IAD7B,uBACfH,EADe,EACfA,KAEFC,EAHiB,2BAIlBD,GAJkB,IAKrBjE,SAAS,uDAAD,OAAyDiE,EAAKnE,WALjD,kBAQhBoE,GARgB,2CAAH,sDAWTI,GAAa,uCAAG,WAAO/E,GAAP,iBAAAuE,EAAA,sEACJC,KAAMQ,OAAN,oBAA0BhF,IADtB,uBACnB0E,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbO,GAAQ,uCAAG,WAAOjF,EAAIkF,GAAX,iBAAAX,EAAA,sEACCC,KAAMW,MAAN,oBAAyBnF,GAAMkF,GADhC,uBACdR,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,wDC3BRU,GAAY,uCAAG,kCAAAb,EAAA,sEACEC,KAAMC,IAAI,eADZ,2BAClBC,KAEFC,EAHoB,QAClBD,OADkB,MACX,GADW,aAGVA,OAHU,EAGVA,EAAMjF,KAAI,SAACyC,GAAW,IAAD,EAC7BmD,EAAO,UAAGnD,EAAM3D,YAAT,aAAG,EAAYkB,KAAI,SAACC,GAC/B,OAAO,2BACFA,GADL,IAEEe,SAAS,uDAAD,OAAyDf,EAAIa,cAGzE,OAAO,2BAAK2B,GAAZ,IAAmB3D,KAAM8G,OAVD,kBAanBV,GAbmB,2CAAH,qDAgBZW,GAAW,uCAAG,WAAOT,GAAP,iBAAAN,EAAA,sEACFC,KAAMM,KAAK,cAAX,eAA+BD,IAD7B,uBACjBH,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXa,GAAe,uCAAG,WAAOvF,GAAP,iBAAAuE,EAAA,sEACNC,KAAMQ,OAAN,sBAA4BhF,IADtB,uBACrB0E,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDCiQbc,OAnQf,WAAwB,IAAD,EACiBC,mBAAS,CAAElH,KAAM,GAAIuD,OAAQ,KAD9C,mBACd4D,EADc,KACDC,EADC,KAGrBC,qBAAU,YACK,uCAAG,4BAAArB,EAAA,+EAEOD,KAFP,OAEN/F,EAFM,OAGZoH,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBtH,YAJR,gDAOZyD,QAAQC,IAAR,MAPY,yDAAH,qDAUb6D,KACC,IAEHF,qBAAU,YACM,uCAAG,4BAAArB,EAAA,+EAEQa,KAFR,OAEPtD,EAFO,OAGb6D,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkB/D,cAJP,gDAObE,QAAQC,IAAR,MAPa,yDAAH,qDAUd8D,KACC,IAEH,IAAM/C,EAAM,uCAAG,WAAO6B,GAAP,eAAAN,EAAA,+EAEUK,GAAUC,GAFpB,OAELmB,EAFK,OAGXL,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBtH,KAAK,GAAD,mBAAMsH,EAAKtH,MAAX,CAAiByH,SAJ9B,gDAOXhE,QAAQC,IAAR,MAPW,yDAAH,sDAWNoC,EAAQ,uCAAG,WAAOQ,GAAP,eAAAN,EAAA,+EAEMe,GAAYT,GAFlB,OAEPH,EAFO,OAGbiB,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkB/D,OAAO,GAAD,mBAAM+D,EAAK/D,QAAX,4BAAwB4C,GAAxB,IAA8BnG,KAAM,YAJjD,gDAObyD,QAAQC,IAAR,MAPa,yDAAH,sDAWRF,EAAW,uCAAG,WAAO/B,GAAP,iBAAAuE,EAAA,sDAClB,IACegB,GAAgBvF,KAErBiG,EADE,UACaP,EAAY5D,cADzB,aACa,EAAoBoE,MACvC,SAAChE,GAAD,OAAWA,EAAMlC,KAAOmG,OAAOnG,MAGjC2F,GAAe,SAACE,GACd,OAAO,2BACFA,GADL,IAEE/D,OAAQ,YAAI+D,EAAK/D,QAAQsE,QAAO,SAAClE,GAC/B,OAAOA,EAAMlC,KAAOA,KAEtBzB,KAAK,GAAD,mBAAMsH,EAAKtH,MAAX,YAAoB0H,EAAa1H,aAW3C,MAAO8H,GACPrE,QAAQC,IAAIoE,GA1BI,2CAAH,sDA8BX7H,EAAS,uCAAG,WAAOwB,GAAP,uCAAAuE,EAAA,6DAAW+B,EAAX,+BAAqB,KAArB,kBAEKvB,GAAc/E,GAFnB,gBAIPsG,GAMGC,EADD,UACcb,EAAY5D,cAD1B,aACc,EAAoB0E,WAAU,SAACtE,GAChD,OAAOA,EAAMlC,KAAOsG,KAEhBG,EAJD,mBAIgBf,QAJhB,IAIgBA,OAJhB,EAIgBA,EAAa5D,QAC5BuD,EALD,UAKWoB,EAASF,GAAYhI,YALhC,aAKW,EAA2B6H,QACzC,SAAC1G,GAAD,OAASA,EAAIM,KAAOA,KAEtByG,EAASF,GAAYhI,KAAO8G,EAC5BM,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkB/D,OAAQ2E,SAdtBpB,EAAUK,EAAYnH,KAAK6H,QAAO,SAAC1G,GAAD,OAASA,EAAIM,KAAOA,KAC5D2F,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBtH,KAAM8G,SAPhB,gDAwBdrD,QAAQC,IAAR,MAxBc,yDAAH,sDA4BTyE,EAAY,SAAC1G,GACjB,IAAI2G,EACO,gBAAP3G,EAEF2G,EADcjB,EAAY5D,OAAOoE,MAAK,SAAChE,GAAD,OAAWA,EAAMlC,KAAOmG,OAAOnG,MACvDzB,KAEdoI,EAAQjB,EAAYnH,KAEtB,OAAO,YAAIoI,IAGPC,EAAc,uCAAG,WAAOC,EAAOP,GAAd,eAAA/B,EAAA,6DACfuC,EAA4B,gBAAZR,EAA4B,KAAOA,EADpC,SAEfrB,GAAS4B,EAAO,CAAEP,QAASQ,IAFZ,2CAAH,wDAIdC,EAAS,uCAAG,WAAOC,GAAP,mCAAAzC,EAAA,yDACR0C,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YADA,oDAOZD,EAAOhI,cAAgBiI,EAAYjI,YAPvB,iBAQRkI,EAAcT,EAAUO,EAAOhI,aARvB,EASIkI,EAAYC,OAAOH,EAAOtH,MAAO,GATrC,mBASP0H,EATO,KAUdF,EAAYC,OAAOF,EAAYvH,MAAO,EAAG0H,GACd,gBAAvBJ,EAAOhI,aACT0G,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBtH,KAAM4I,OAGD,gBAAvBF,EAAOhI,aACT0G,GAAe,SAACE,GACd,IAAMyB,EAAS,YAAOzB,EAAK/D,QACrByE,EAAae,EAAUd,WAAU,SAACtE,GACtC,OAAOA,EAAMlC,KAAOmG,OAAOc,EAAOhI,gBAMpC,OAJAqI,EAAUf,GAAV,2BACKe,EAAUf,IADf,IAEEhI,KAAM4I,IAED,2BAAKtB,GAAZ,IAAkB/D,OAAQwF,OA1BhB,+BA8BRH,EAAcT,EAAUO,EAAOhI,aAC/BsI,EAAmBb,EAAUQ,EAAYjI,aA/BjC,EAgCIkI,EAAYC,OAAOH,EAAOtH,MAAO,GAhCrC,mBAgCP0H,EAhCO,eAiCRT,EAAeS,EAAQrH,GAAIkH,EAAYjI,aAjC/B,QAmCdsI,EAAiBH,OAAOF,EAAYvH,MAAO,EAAG0H,GAEnB,gBAAvBJ,EAAOhI,aACT0G,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBtH,KAAM4I,OAGD,gBAAvBF,EAAOhI,aACT0G,GAAe,SAACE,GACd,IAAMyB,EAAS,YAAOzB,EAAK/D,QAErByE,EAAae,EAAUd,WAC3B,SAACtE,GAAD,OAAWA,EAAMlC,KAAOmG,OAAOc,EAAOhI,gBAMxC,OAJAqI,EAAUf,GAAV,2BACKe,EAAUf,IADf,IAEEhI,KAAM4I,IAED,2BAAKtB,GAAZ,IAAkB/D,OAAQwF,OAGE,gBAA5BJ,EAAYjI,aACd0G,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBtH,KAAMgJ,OAII,gBAA5BL,EAAYjI,aACd0G,GAAe,SAACE,GACd,IAAMyB,EAAS,YAAOzB,EAAK/D,QAErByE,EAAae,EAAUd,WAC3B,SAACtE,GAAD,OAAWA,EAAMlC,KAAOmG,OAAOe,EAAYjI,gBAM7C,OAJAqI,EAAUf,GAAV,2BACKe,EAAUf,IADf,IAEEhI,KAAMgJ,IAED,2BAAK1B,GAAZ,IAAkB/D,OAAQwF,OAzEhB,4CAAH,sDA+Ef,OACE,qBAAKvI,MAAO,CAAEC,OAAQ,UAAtB,SACE,eAACL,EAAA,EAAD,CAAMC,WAAS,EAACqE,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAA5D,UACE,eAACxE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIqD,GAAI,EAAvB,UACE,cAAC,EAAD,CAASa,OAAQA,IACjB,cAAC,GAAD,CAAWqB,SAAUA,OAGvB,cAAC1F,EAAA,EAAD,CACEE,MAAI,EACJC,GAAI,GACJqD,GAAI,EACJvD,WAAS,EACTqE,UAAU,MACVC,QAAQ,SACRC,WAAW,SAPb,SASE,eAAC,IAAD,CAAiB4D,UAAWA,EAA5B,UACE,cAACpI,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,GAAI,GACJqD,GAAI,EACJc,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXvF,QAAS,EARX,SAUE,cAAC,EAAD,CAAMW,KAAMmH,EAAYnH,KAAMC,UAAWA,MAG3C,cAACG,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJC,GAAI,GACJqD,GAAI,EACJc,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXvF,QAAS,EARX,SAUE,cAAC,EAAD,CACEkE,OAAQ4D,EAAY5D,OACpBC,YAAaA,EACbvD,UAAWA,iBChQZgJ,OATf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,GAAD,QCmBSC,OAxBf,WAAqB,IACb7G,EAAa8G,cAAb9G,SACAnC,EAAUC,cAmBhB,OAlBAkH,qBAAU,YACO,uCAAG,sBAAArB,EAAA,sEACVC,KACHC,IADG,oBACc7D,IACjB+G,MAAK,YAAe,IAAZjD,EAAW,EAAXA,KACP1C,QAAQC,IAAIyC,IACZ,OAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAMnE,SACRiB,OAAOC,SAAP,mBAAuBiD,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMnE,SAE7B9B,EAAQ0C,KAAK,QAGhByG,OAAM,SAACC,GACN7F,QAAQC,IAAI4F,MAZA,2CAAH,qDAefC,KACC,CAAClH,EAAUnC,IACP,8BCLMsJ,OAdf,WACE,OACE,sBAAK/J,UAAU,MAAf,UACE,cAACgK,EAAA,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAAC1E,UAAWgE,KACjC,cAAC,IAAD,CAAOS,KAAK,aAAazE,UAAWiE,cCD/BU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.e49c6a3d.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"body1\" className={classes.title}>\n            Short Link\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { memo } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  Grid,\n  IconButton,\n  ListItemText,\n  ListItem,\n  List,\n  Paper,\n  ListItemAvatar,\n  Avatar,\n  Tooltip,\n} from \"@material-ui/core\";\n\nfunction Urls({ urls, deleteUrl }) {\n  const history = useHistory();\n\n  const copiedToClipboard = (shortURL) => {\n    navigator.clipboard.writeText(`${window.location.host}/${shortURL}`);\n  };\n  const goesTo = (shortURL) => {\n    history.push({ pathname: shortURL });\n  };\n  return (\n    <>\n      <Grid container item xs={12} spacing={1} style={{ margin: \"10px 0\" }}>\n        <Grid item xs={12}>\n          <Droppable droppableId=\"noGroupUrls\">\n            {(provided) => {\n              return (\n                <Paper\n                  elevation={3}\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  style={{ minHeight: \"250px\" }}\n                >\n                  {urls.map((url, index) => {\n                    return (\n                      <List key={url.id} dense={true}>\n                        <Draggable\n                          key={url.id}\n                          draggableId={String(url.id)}\n                          index={index}\n                        >\n                          {(provided) => (\n                            <ListItem\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <ListItemAvatar>\n                                <Avatar alt={url.fullUrl} src={url.favicons} />\n                              </ListItemAvatar>\n                              <ListItemText\n                                primary={url.shortUrl}\n                                secondary={url.fullUrl ? url?.fullUrl : null}\n                              />\n\n                              <Tooltip title=\"Go To\">\n                                <IconButton\n                                  aria-label=\"redirect\"\n                                  onClick={() => goesTo(url?.shortUrl)}\n                                >\n                                  <ExitToAppIcon />\n                                </IconButton>\n                              </Tooltip>\n\n                              <Tooltip title=\"copy\">\n                                <IconButton\n                                  aria-label=\"copy\"\n                                  onClick={() =>\n                                    copiedToClipboard(url?.shortUrl)\n                                  }\n                                >\n                                  <FileCopyIcon />\n                                </IconButton>\n                              </Tooltip>\n                              <Tooltip title=\"delete\">\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  onClick={() => deleteUrl(url.id)}\n                                >\n                                  <DeleteIcon />\n                                </IconButton>\n                              </Tooltip>\n                            </ListItem>\n                          )}\n                        </Draggable>\n                      </List>\n                    );\n                  })}\n                  {provided.placeholder}\n                </Paper>\n              );\n            }}\n          </Droppable>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nexport default memo(Urls);\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useHistory } from \"react-router-dom\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  Grid,\n  IconButton,\n  ListItemText,\n  ListItem,\n  List,\n  Paper,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  Tooltip,\n} from \"@material-ui/core\";\n\nfunction Groups({ groups, deleteGroup, deleteUrl }) {\n  const history = useHistory();\n  const copiedToClipboard = (shortURL) => {\n    navigator.clipboard.writeText(`${window.location.host}/${shortURL}`);\n  };\n  const goesTo = (shortURL) => {\n    history.push({ pathname: shortURL });\n  };\n  console.log();\n  return (\n    <>\n      {groups.map((group) => {\n        return (\n          <Grid container item xs={12} md={6} key={group.id} spacing={1}>\n            <Grid item xs={12}>\n              <Paper elevation={3}>\n                <Typography variant=\"body1\">\n                  {group.name}\n                  {group.id}\n                </Typography>\n\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => deleteGroup(group.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Droppable droppableId={`${group.id}`}>\n                {(provided) => {\n                  return (\n                    <Paper\n                      elevation={3}\n                      {...provided.droppableProps}\n                      ref={provided.innerRef}\n                      style={{ minHeight: \"250px\" }}\n                    >\n                      {group.urls?.map((link, index) => {\n                        return (\n                          <List key={link.id} dense={true}>\n                            <Draggable\n                              key={link.id}\n                              draggableId={String(link.id)}\n                              index={index}\n                            >\n                              {(provided) => (\n                                <ListItem\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                >\n                                  <ListItemAvatar>\n                                    <Avatar\n                                      alt={link.fullUrl}\n                                      src={link.favicons}\n                                    />\n                                  </ListItemAvatar>\n\n                                  <ListItemText\n                                    primary={link.alias || link.shortUrl}\n                                    secondary={link.fullUrl || null}\n                                  />\n\n                                  <Tooltip title=\"Go To\">\n                                    <IconButton\n                                      aria-label=\"redirect\"\n                                      onClick={() => goesTo(link?.shortUrl)}\n                                    >\n                                      <ExitToAppIcon />\n                                    </IconButton>\n                                  </Tooltip>\n\n                                  <Tooltip title=\"copy\">\n                                    <IconButton\n                                      aria-label=\"copy\"\n                                      onClick={() =>\n                                        copiedToClipboard(link?.shortUrl)\n                                      }\n                                    >\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </Tooltip>\n                                  <Tooltip title=\"delete\">\n                                    <IconButton\n                                      aria-label=\"delete\"\n                                      onClick={() =>\n                                        deleteUrl(link.id, group.id)\n                                      }\n                                    >\n                                      <DeleteIcon />\n                                    </IconButton>\n                                  </Tooltip>\n                                </ListItem>\n                              )}\n                            </Draggable>\n                          </List>\n                        );\n                      })}\n                      {provided.placeholder}\n                    </Paper>\n                  );\n                }}\n              </Droppable>\n            </Grid>\n          </Grid>\n        );\n      })}\n    </>\n  );\n}\nexport default Groups;\n","import React from \"react\";\nimport { TextField } from \"formik-material-ui\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormGroup, Button, Paper, Grid } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst UrlSchema = Yup.object().shape({\n  fullUrl: Yup.string()\n    .matches(\n      /((https?):\\/\\/)?(www.)?[a-z0-9-]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#-]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n      \"Enter correct url!\"\n    )\n    .required(\"Required\"),\n  shortUrl: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\"),\n  alias: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: \"25ch\",\n    },\n  },\n}));\n\nfunction UrlForm({ addUrl }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <Formik\n            initialValues={{\n              fullUrl: \"\",\n              shortUrl: \"\",\n              alias: \"\",\n            }}\n            validationSchema={UrlSchema}\n            onSubmit={addUrl}\n          >\n            <Paper elevation={3}>\n              <Form className={classes.root} style={{ padding: \".5em\" }}>\n                <Field\n                  component={TextField}\n                  name=\"fullUrl\"\n                  type=\"text\"\n                  label=\"Full Url\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Field\n                  component={TextField}\n                  name=\"shortUrl\"\n                  type=\"text\"\n                  label=\"Short Url\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n\n                <Field\n                  component={TextField}\n                  name=\"alias\"\n                  type=\"text\"\n                  label=\"Alias\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <FormGroup row className={classes.root}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    endIcon={<SaveIcon />}\n                  >\n                    Submit\n                  </Button>\n                </FormGroup>\n              </Form>\n            </Paper>\n          </Formik>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default UrlForm;\n","import React from \"react\";\nimport { TextField } from \"formik-material-ui\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik, Field, Form } from \"formik\";\nimport { FormGroup, Button, Paper, Grid } from \"@material-ui/core\";\n\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport * as Yup from \"yup\";\n\nconst GroupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\n\nfunction GroupForm({ addGroup }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <Formik\n            initialValues={{\n              name: \"\",\n            }}\n            validationSchema={GroupSchema}\n            onSubmit={addGroup}\n          >\n            <Paper elevation={3}>\n              <Form className={classes.root}>\n                <FormGroup row className={classes.root}>\n                  <Field\n                    component={TextField}\n                    name=\"name\"\n                    type=\"text\"\n                    label=\"Group Name\"\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </FormGroup>\n                <FormGroup row className={classes.root}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    type=\"submit\"\n                    endIcon={<SaveIcon />}\n                  >\n                    Submit\n                  </Button>\n                </FormGroup>\n              </Form>\n            </Paper>\n          </Formik>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default GroupForm;\n","import axios from \"axios\";\n\nexport const getNoGroupUrls = async () => {\n  const { data = [] } = await axios.get(\"/api/urls\");\n  const newData = data?.map((url) => {\n    return {\n      ...url,\n      favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${url.fullUrl}`,\n    };\n  });\n  return newData;\n};\n\nexport const addNewUrl = async (values) => {\n  const { data } = await axios.post(\"/api/urls\", { ...values });\n\n  const newData = {\n    ...data,\n    favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${data.fullUrl}`,\n  };\n\n  return newData;\n};\n\nexport const deleteUrlById = async (id) => {\n  const { data } = await axios.delete(`/api/urls/${id}`);\n  return data;\n};\n\nexport const patchUrl = async (id, fields) => {\n  const { data } = await axios.patch(`/api/urls/${id}`, fields);\n  return data;\n};\n","import axios from \"axios\";\n\nexport const getGroupUrls = async () => {\n  const { data = [] } = await axios.get(\"/api/groups\");\n\n  const newData = data?.map((group) => {\n    const newUrls = group.urls?.map((url) => {\n      return {\n        ...url,\n        favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${url.fullUrl}`,\n      };\n    });\n    return { ...group, urls: newUrls };\n  });\n\n  return newData;\n};\n\nexport const addNewGroup = async (values) => {\n  const { data } = await axios.post(\"/api/groups\", { ...values });\n  return data;\n};\n\nexport const deleteGroupById = async (id) => {\n  const { data } = await axios.delete(`/api/groups/${id}`);\n  return data;\n};\n","import { Grid } from \"@material-ui/core\";\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport Urls from \"./Urls\";\nimport Group from \"./Groups\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport UrlForm from \"./UrlForm\";\nimport GroupForm from \"./GroupForm\";\n\nimport {\n  getNoGroupUrls,\n  addNewUrl,\n  deleteUrlById,\n  patchUrl,\n} from \"../api/urlRequest\";\nimport {\n  getGroupUrls,\n  addNewGroup,\n  deleteGroupById,\n} from \"../api/groupRequest\";\n\nfunction MainDisplay() {\n  const [groupOfUrls, setGroupOfUrls] = useState({ urls: [], groups: [] });\n\n  useEffect(() => {\n    const getUrls = async () => {\n      try {\n        const urls = await getNoGroupUrls();\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls };\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUrls();\n  }, []);\n\n  useEffect(() => {\n    const getGroup = async () => {\n      try {\n        const groups = await getGroupUrls();\n        setGroupOfUrls((prev) => {\n          return { ...prev, groups };\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getGroup();\n  }, []);\n\n  const addUrl = async (values) => {\n    try {\n      const newUrl = await addNewUrl(values);\n      setGroupOfUrls((prev) => {\n        return { ...prev, urls: [...prev.urls, newUrl] };\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const addGroup = async (values) => {\n    try {\n      const data = await addNewGroup(values);\n      setGroupOfUrls((prev) => {\n        return { ...prev, groups: [...prev.groups, { ...data, urls: [] }] };\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteGroup = async (id) => {\n    try {\n      const data = deleteGroupById(id);\n      if (data) {\n        const deletedGroup = groupOfUrls.groups?.find(\n          (group) => group.id === Number(id)\n        );\n\n        setGroupOfUrls((prev) => {\n          return {\n            ...prev,\n            groups: [...prev.groups].filter((group) => {\n              return group.id !== id;\n            }),\n            urls: [...prev.urls, ...deletedGroup.urls],\n          };\n        });\n\n        // setGroups((prev) =>\n        //   [...prev]?.filter((group) => {\n        //     return group.id !== id;\n        //   })\n        // );\n        // setUrls((prev) => [...prev, ...deletedGroup.urls]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteUrl = async (id, groupId = null) => {\n    try {\n      const data = await deleteUrlById(id);\n      if (data) {\n        if (!groupId) {\n          const newUrls = groupOfUrls.urls.filter((url) => url.id !== id);\n          setGroupOfUrls((prev) => {\n            return { ...prev, urls: newUrls };\n          });\n        } else {\n          const groupIndex = groupOfUrls.groups?.findIndex((group) => {\n            return group.id === groupId;\n          });\n          const newGroup = [...groupOfUrls?.groups];\n          const newUrls = newGroup[groupIndex].urls?.filter(\n            (url) => url.id !== id\n          );\n          newGroup[groupIndex].urls = newUrls;\n          setGroupOfUrls((prev) => {\n            return { ...prev, groups: newGroup };\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const findArray = (id) => {\n    let array;\n    if (id !== \"noGroupUrls\") {\n      const group = groupOfUrls.groups.find((group) => group.id === Number(id));\n      array = group.urls;\n    } else {\n      array = groupOfUrls.urls;\n    }\n    return [...array];\n  };\n\n  const updateUrlGroup = async (urlId, groupId) => {\n    const formatGroupId = groupId === \"noGroupUrls\" ? null : groupId;\n    await patchUrl(urlId, { groupId: formatGroupId });\n  };\n  const onDragEnd = async (result) => {\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const sourceArray = findArray(source.droppableId);\n      const [removed] = sourceArray.splice(source.index, 1);\n      sourceArray.splice(destination.index, 0, removed);\n      if (source.droppableId === \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls: sourceArray };\n        });\n      }\n      if (source.droppableId !== \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n          const groupIndex = newGroups.findIndex((group) => {\n            return group.id === Number(source.droppableId);\n          });\n          newGroups[groupIndex] = {\n            ...newGroups[groupIndex],\n            urls: sourceArray,\n          };\n          return { ...prev, groups: newGroups };\n        });\n      }\n    } else {\n      const sourceArray = findArray(source.droppableId);\n      const destinationArray = findArray(destination.droppableId);\n      const [removed] = sourceArray.splice(source.index, 1);\n      await updateUrlGroup(removed.id, destination.droppableId);\n\n      destinationArray.splice(destination.index, 0, removed);\n\n      if (source.droppableId === \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls: sourceArray };\n        });\n      }\n      if (source.droppableId !== \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n\n          const groupIndex = newGroups.findIndex(\n            (group) => group.id === Number(source.droppableId)\n          );\n          newGroups[groupIndex] = {\n            ...newGroups[groupIndex],\n            urls: sourceArray,\n          };\n          return { ...prev, groups: newGroups };\n        });\n      }\n      if (destination.droppableId === \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls: destinationArray };\n        });\n      }\n\n      if (destination.droppableId !== \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n\n          const groupIndex = newGroups.findIndex(\n            (group) => group.id === Number(destination.droppableId)\n          );\n          newGroups[groupIndex] = {\n            ...newGroups[groupIndex],\n            urls: destinationArray,\n          };\n          return { ...prev, groups: newGroups };\n        });\n      }\n    }\n  };\n\n  return (\n    <div style={{ margin: \"20px 0\" }}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} md={4}>\n          <UrlForm addUrl={addUrl} />\n          <GroupForm addGroup={addGroup} />\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          md={8}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Grid\n              container\n              item\n              xs={12}\n              md={4}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Urls urls={groupOfUrls.urls} deleteUrl={deleteUrl} />\n            </Grid>\n\n            <Grid\n              container\n              item\n              xs={12}\n              md={8}\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Group\n                groups={groupOfUrls.groups}\n                deleteGroup={deleteGroup}\n                deleteUrl={deleteUrl}\n              />\n            </Grid>\n          </DragDropContext>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default MainDisplay;\n","import React from \"react\";\n\nimport AppBar from \"./AppBar\";\nimport MainDisplay from \"./MainDisplay\";\n\nfunction Main() {\n  return (\n    <div>\n      <AppBar />\n      <MainDisplay />\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nfunction Redirect() {\n  let { shortUrl } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios\n        .get(`/api/urls/${shortUrl}`)\n        .then(({ data }) => {\n          console.log(data);\n          if (data?.fullUrl) {\n            window.location = `//${data?.fullUrl}`;\n          } else {\n            history.push(\"/\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    fetchData();\n  }, [shortUrl, history]);\n  return <></>;\n}\n\nexport default Redirect;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Main from \"./components/Main\";\nimport Redirect from \"./components/Redirect\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/:shortUrl\" component={Redirect} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}