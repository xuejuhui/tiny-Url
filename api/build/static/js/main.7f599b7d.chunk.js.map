{"version":3,"sources":["components/AppBar.jsx","components/Urls.jsx","components/Groups.jsx","components/UrlForm.jsx","components/GroupForm.jsx","api/urlRequest.js","api/groupRequest.js","components/MainDisplay.jsx","components/Main.jsx","components/Redirect.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","Urls","urls","deleteUrl","history","useHistory","Grid","container","item","xs","style","margin","droppableId","provided","Paper","elevation","droppableProps","ref","innerRef","minHeight","map","url","index","List","dense","draggableId","String","id","ListItem","draggableProps","dragHandleProps","ListItemAvatar","Avatar","alt","fullUrl","src","favicons","ListItemText","primary","alias","shortUrl","secondary","counter","Tooltip","IconButton","aria-label","onClick","shortURL","push","pathname","navigator","clipboard","writeText","window","location","host","placeholder","memo","Groups","groups","deleteGroup","console","log","group","md","name","link","UrlSchema","Yup","shape","matches","required","min","max","width","UrlForm","addUrl","direction","justify","alignItems","initialValues","validationSchema","onSubmit","minWidth","padding","component","TextField","type","label","InputLabelProps","shrink","Button","color","endIcon","GroupSchema","GroupForm","addGroup","getNoGroupUrls","a","axios","get","data","newData","addNewUrl","values","post","deleteUrlById","delete","patchUrl","fields","patch","incrementUrlCounter","getGroupUrls","newUrls","addNewGroup","deleteGroupById","MainDisplay","useState","groupOfUrls","setGroupOfUrls","useEffect","prev","getUrls","getGroup","rest","setSubmitting","setErrors","resetForm","newUrl","message","submit","deletedGroup","find","Number","filter","error","groupId","groupIndex","findIndex","newGroup","findArray","array","updateUrlGroup","urlId","formatGroupId","onDragEnd","result","source","destination","sourceArray","splice","removed","newGroups","destinationArray","lg","sm","Main","overflowX","Redirect","useParams","then","catch","err","fetchData","App","CssBaseline","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAMMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,OAIC,SAASK,IACtB,IAAMC,EAAUV,IAEhB,OACE,qBAAKW,UAAWD,EAAQP,KAAxB,SACE,cAACS,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQL,UAAWD,EAAQF,MAA/C,8B,wMCLV,SAASS,EAAT,GAAoC,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACdC,EAAUC,cAQhB,OACE,mCACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIlB,QAAS,EAAGmB,MAAO,CAAEC,OAAQ,UAA1D,SACE,cAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAWG,YAAY,cAAvB,SACG,SAACC,GACA,OACE,eAACC,EAAA,EAAD,yBACEC,UAAW,GACPF,EAASG,gBAFf,IAGEC,IAAKJ,EAASK,SACdR,MAAO,CAAES,UAAW,SAJtB,UAMGjB,EAAKkB,KAAI,SAACC,EAAKC,GACd,OACE,cAACC,EAAA,EAAD,CAAmBC,OAAO,EAA1B,SACE,cAAC,IAAD,CAEEC,YAAaC,OAAOL,EAAIM,IACxBL,MAAOA,EAHT,SAKG,SAACT,GAAD,OACC,eAACe,EAAA,EAAD,qCACEX,IAAKJ,EAASK,UACVL,EAASgB,gBACThB,EAASiB,iBAHf,cAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAQC,IAAKZ,EAAIa,QAASC,IAAKd,EAAIe,aAErC,cAACC,EAAA,EAAD,CACEC,QAASjB,EAAIkB,OAASlB,EAAImB,SAC1BC,UAAWpB,EAAIa,SAAW,OAE5B,cAACG,EAAA,EAAD,CACEC,QAAQ,aACRG,UAAWpB,EAAIqB,UAGjB,cAACC,EAAA,EAAD,CAASnD,MAAM,QAAf,SACE,cAACoD,EAAA,EAAD,CACEC,aAAW,WACXC,QAAS,kBA7CzBC,EA6CqC,OAAC1B,QAAD,IAACA,OAAD,EAACA,EAAKmB,cA5CzDpC,EAAQ4C,KAAK,CAAEC,SAAUF,IADZ,IAACA,GA2Cc,SAIE,cAAC,IAAD,QAIJ,cAACJ,EAAA,EAAD,CAASnD,MAAM,OAAf,SACE,cAACoD,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,kBAzDdC,EA0DwB,OAAC1B,QAAD,IAACA,OAAD,EAACA,EAAKmB,cAzDvDU,UAAUC,UAAUC,UAApB,UAAiCC,OAAOC,SAASC,KAAjD,YAAyDR,IADjC,IAACA,GAuDG,SAME,cAAC,IAAD,QAGJ,cAACJ,EAAA,EAAD,CAASnD,MAAM,SAAf,SACE,cAACoD,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,kBAAM3C,EAAUkB,EAAIM,KAF/B,SAIE,cAAC,IAAD,cA9CHN,EAAIM,KAFFN,EAAIM,OAyDlBd,EAAS2C,yBAUbC,qBAAKxD,GCwBLyD,MAnHf,YAAqD,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,YAAazD,EAAa,EAAbA,UAC/BC,EAAUC,cAQhB,OADAwD,QAAQC,MAEN,mCACGH,EAAOvC,KAAI,SAAC2C,GACX,OACE,eAACzD,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIuD,GAAI,EAAkBzE,QAAS,EAA5D,UACE,cAACe,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACK,EAAA,EAAD,CAAOC,UAAW,EAAlB,UACE,eAAChB,EAAA,EAAD,CAAYC,QAAQ,QAApB,UACG+D,EAAME,KACNF,EAAMpC,MAGT,cAACiB,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,kBAAMc,EAAYG,EAAMpC,KAFnC,SAIE,cAAC,IAAD,WAIN,cAACrB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,cAAC,IAAD,CAAWG,YAAW,UAAKmD,EAAMpC,IAAjC,SACG,SAACd,GAAc,IAAD,EACb,OACE,eAACC,EAAA,EAAD,yBACEC,UAAW,GACPF,EAASG,gBAFf,IAGEC,IAAKJ,EAASK,SACdR,MAAO,CAAES,UAAW,SAJtB,oBAMG4C,EAAM7D,YANT,aAMG,EAAYkB,KAAI,SAAC8C,EAAM5C,GACtB,OACE,cAACC,EAAA,EAAD,CAAoBC,OAAO,EAA3B,SACE,cAAC,IAAD,CAEEC,YAAaC,OAAOwC,EAAKvC,IACzBL,MAAOA,EAHT,SAKG,SAACT,GAAD,OACC,eAACe,EAAA,EAAD,qCACEX,IAAKJ,EAASK,UACVL,EAASgB,gBACThB,EAASiB,iBAHf,cAKE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,IAAKiC,EAAKhC,QACVC,IAAK+B,EAAK9B,aAId,cAACC,EAAA,EAAD,CACEC,QAAS4B,EAAK3B,OAAS2B,EAAK1B,SAC5BC,UAAWyB,EAAKhC,SAAW,OAE7B,cAACG,EAAA,EAAD,CACEC,QAAQ,aACRG,UAAWyB,EAAKxB,UAElB,cAACC,EAAA,EAAD,CAASnD,MAAM,QAAf,SACE,cAACoD,EAAA,EAAD,CACEC,aAAW,WACXC,QAAS,kBAlE7BC,EAkEyC,OAACmB,QAAD,IAACA,OAAD,EAACA,EAAM1B,cAjE9DpC,EAAQ4C,KAAK,CAAEC,SAAUF,IADZ,IAACA,GAgEkB,SAIE,cAAC,IAAD,QAIJ,cAACJ,EAAA,EAAD,CAASnD,MAAM,OAAf,SACE,cAACoD,EAAA,EAAD,CACEC,aAAW,OACXC,QAAS,kBA9ElBC,EA+E4B,OAACmB,QAAD,IAACA,OAAD,EAACA,EAAM1B,cA9E5DU,UAAUC,UAAUC,UAApB,UAAiCC,OAAOC,SAASC,KAAjD,YAAyDR,IADjC,IAACA,GA4EO,SAME,cAAC,IAAD,QAGJ,cAACJ,EAAA,EAAD,CAASnD,MAAM,SAAf,SACE,cAACoD,EAAA,EAAD,CACEC,aAAW,SACXC,QAAS,kBACP3C,EAAU+D,EAAKvC,GAAIoC,EAAMpC,KAH7B,SAME,cAAC,IAAD,cAnDHuC,EAAKvC,KAFHuC,EAAKvC,OA8DnBd,EAAS2C,uBA1FmBO,EAAMpC,U,kDCxBnDwC,EAAYC,MAAaC,MAAM,CACnCnC,QAASkC,MACNE,QACC,oHACA,sBAEDC,SAAS,YACZ/B,SAAU4B,MAAaI,IAAI,EAAG,cAAcC,IAAI,GAAI,aACpDlC,MAAO6B,MAAaI,IAAI,EAAG,cAAcC,IAAI,GAAI,eAG7CzF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPwB,OAAQzB,EAAMK,QAAQ,GACtBmF,MAAO,aAuEEC,MAlEf,YAA8B,IAAXC,EAAU,EAAVA,OACXlF,EAAUV,IAEhB,OACE,mCACE,cAACsB,EAAA,EAAD,CAAMC,WAAS,EAACsE,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAA5D,SACE,cAACzE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CACEuE,cAAe,CACb9C,QAAS,GACTM,SAAU,GACVD,MAAO,IAET0C,iBAAkBd,EAClBe,SAAUN,EAPZ,SASE,cAAC9D,EAAA,EAAD,CAAOC,UAAW,EAAGL,MAAO,CAAEyE,SAAU,SAAxC,SACE,eAAC,IAAD,CAAMxF,UAAWD,EAAQP,KAAMuB,MAAO,CAAE0E,QAAS,QAAjD,UACE,cAAC,IAAD,CACEC,UAAWC,IACXrB,KAAK,UACLsB,KAAK,OACLC,MAAM,WACNxF,QAAQ,WACRyF,gBAAiB,CACfC,QAAQ,KAGZ,cAAC,IAAD,CACEL,UAAWC,IACXrB,KAAK,WACLsB,KAAK,OACLC,MAAM,YACNxF,QAAQ,WACRyF,gBAAiB,CACfC,QAAQ,KAIZ,cAAC,IAAD,CACEL,UAAWC,IACXrB,KAAK,QACLsB,KAAK,OACLC,MAAM,QACNxF,QAAQ,WACRyF,gBAAiB,CACfC,QAAQ,KAGZ,cAACC,EAAA,EAAD,CACE3F,QAAQ,YACR4F,MAAM,UACNL,KAAK,SACLM,QAAS,cAAC,IAAD,IAJX,kCCrEVC,EAAc1B,MAAaC,MAAM,CACrCJ,KAAMG,MACHI,IAAI,EAAG,cACPC,IAAI,GAAI,aACRF,SAAS,cAGRvF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPwB,OAAQzB,EAAMK,QAAQ,GACtBmF,MAAO,aAgDEqB,OA3Cf,YAAkC,IAAbC,EAAY,EAAZA,SACbtG,EAAUV,IAEhB,OACE,mCACE,cAACsB,EAAA,EAAD,CAAMC,WAAS,EAACsE,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAA5D,SACE,cAACzE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACE,cAAC,IAAD,CACEuE,cAAe,CACbf,KAAM,IAERgB,iBAAkBa,EAClBZ,SAAUc,EALZ,SAOE,cAAClF,EAAA,EAAD,CAAOC,UAAW,EAAGL,MAAO,CAAEyE,SAAU,SAAxC,SACE,eAAC,IAAD,CAAMxF,UAAWD,EAAQP,KAAMuB,MAAO,CAAE0E,QAAS,QAAjD,UACE,cAAC,IAAD,CACEC,UAAWC,IACXrB,KAAK,OACLsB,KAAK,OACLC,MAAM,aACNxF,QAAQ,WACRyF,gBAAiB,CACfC,QAAQ,KAGZ,cAACC,EAAA,EAAD,CACE3F,QAAQ,YACR4F,MAAM,UACNL,KAAK,SACLM,QAAS,cAAC,IAAD,IAJX,kC,oBCjDHI,GAAc,uCAAG,kCAAAC,EAAA,sEACAC,KAAMC,IAAI,aADV,2BACpBC,KACFC,EAFsB,QACpBD,OADoB,MACb,GADa,aAEZA,OAFY,EAEZA,EAAMjF,KAAI,SAACC,GACzB,OAAO,2BACFA,GADL,IAEEe,SAAS,uDAAD,OAAyDf,EAAIa,cAL7C,kBAQrBoE,GARqB,2CAAH,qDAWdC,GAAS,uCAAG,WAAOC,GAAP,mBAAAN,EAAA,sEACAC,KAAMM,KAAK,YAAX,eAA6BD,IAD7B,uBACfH,EADe,EACfA,KAEFC,EAHiB,2BAIlBD,GAJkB,IAKrBjE,SAAS,uDAAD,OAAyDiE,EAAKnE,WALjD,kBAQhBoE,GARgB,2CAAH,sDAWTI,GAAa,uCAAG,WAAO/E,GAAP,iBAAAuE,EAAA,sEACJC,KAAMQ,OAAN,oBAA0BhF,IADtB,uBACnB0E,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbO,GAAQ,uCAAG,WAAOjF,EAAIkF,GAAX,iBAAAX,EAAA,sEACCC,KAAMW,MAAN,oBAAyBnF,GAAMkF,GADhC,uBACdR,EADc,EACdA,KADc,kBAEfA,GAFe,2CAAH,wDAKRU,GAAmB,uCAAG,WAAOpF,GAAP,iBAAAuE,EAAA,sEACVC,KAAMW,MAAN,oBAAyBnF,EAAzB,WADU,uBACzB0E,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,sDChCnBW,GAAY,uCAAG,kCAAAd,EAAA,sEACEC,KAAMC,IAAI,eADZ,2BAClBC,KAEFC,EAHoB,QAClBD,OADkB,MACX,GADW,aAGVA,OAHU,EAGVA,EAAMjF,KAAI,SAAC2C,GAAW,IAAD,EAC7BkD,EAAO,UAAGlD,EAAM7D,YAAT,aAAG,EAAYkB,KAAI,SAACC,GAC/B,OAAO,2BACFA,GADL,IAEEe,SAAS,uDAAD,OAAyDf,EAAIa,cAGzE,OAAO,2BAAK6B,GAAZ,IAAmB7D,KAAM+G,OAVD,kBAanBX,GAbmB,2CAAH,qDAgBZY,GAAW,uCAAG,WAAOV,GAAP,iBAAAN,EAAA,sEACFC,KAAMM,KAAK,cAAX,eAA+BD,IAD7B,uBACjBH,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,sDAKXc,GAAe,uCAAG,WAAOxF,GAAP,iBAAAuE,EAAA,sEACNC,KAAMQ,OAAN,sBAA4BhF,IADtB,uBACrB0E,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDCgRbe,OAlRf,WAAwB,IAAD,EACiBC,mBAAS,CAAEnH,KAAM,GAAIyD,OAAQ,KAD9C,mBACd2D,EADc,KACDC,EADC,KAGrBC,qBAAU,YACK,uCAAG,4BAAAtB,EAAA,+EAEOD,KAFP,OAEN/F,EAFM,OAGZqH,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBvH,YAJR,gDAOZ2D,QAAQC,IAAR,MAPY,yDAAH,qDAUb4D,KACC,IAEHF,qBAAU,YACM,uCAAG,4BAAAtB,EAAA,+EAEQc,KAFR,OAEPrD,EAFO,OAGb4D,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkB9D,cAJP,gDAObE,QAAQC,IAAR,MAPa,yDAAH,qDAUd6D,KACC,IAEH,IAAM/C,EAAM,uCAAG,6CAAAsB,EAAA,6DACX1D,EADW,EACXA,SAAUD,EADC,EACDA,MAAUqF,EADT,oCAEXC,EAFW,EAEXA,cAAeC,EAFJ,EAEIA,UAAWC,EAFf,EAEeA,UAFf,SAKLlB,EALK,eAKSe,GAChBpF,IACFqE,EAAOrE,SAAWA,GAEhBD,IACFsE,EAAOtE,MAAQA,GAVN,SAYUgE,GAAUM,GAZpB,OAYLmB,EAZK,OAaXD,EAAU,IACVR,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBvH,KAAK,GAAD,mBAAMuH,EAAKvH,MAAX,CAAiB8H,SAf9B,kDAkBXnE,QAAQC,IAAR,KAAmB,KAAMmE,SACzBJ,GAAc,GACdC,EAAU,CAAEI,OAAQ,KAAMD,UApBf,0DAAH,wDAwBNjC,EAAQ,uCAAG,WAAOQ,EAAP,wBAAAN,EAAA,6DAAiB2B,EAAjB,EAAiBA,cAAeC,EAAhC,EAAgCA,UAAWC,EAA3C,EAA2CA,UAA3C,kBAEMb,GAAYV,GAFlB,OAEPH,EAFO,OAGb0B,EAAU,IACVR,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkB9D,OAAO,GAAD,mBAAM8D,EAAK9D,QAAX,4BAAwB0C,GAAxB,IAA8BnG,KAAM,YALjD,gDAQb2H,GAAc,GACdC,EAAU,CAAEI,OAAQ,KAAMD,UATb,yDAAH,wDAaRrE,EAAW,uCAAG,WAAOjC,GAAP,iBAAAuE,EAAA,sDAClB,IACeiB,GAAgBxF,KAErBwG,EADE,UACab,EAAY3D,cADzB,aACa,EAAoByE,MACvC,SAACrE,GAAD,OAAWA,EAAMpC,KAAO0G,OAAO1G,MAGjC4F,GAAe,SAACE,GACd,OAAO,2BACFA,GADL,IAEE9D,OAAQ,YAAI8D,EAAK9D,QAAQ2E,QAAO,SAACvE,GAC/B,OAAOA,EAAMpC,KAAOA,KAEtBzB,KAAK,GAAD,mBAAMuH,EAAKvH,MAAX,YAAoBiI,EAAajI,aAW3C,MAAOqI,GACP1E,QAAQC,IAAIyE,GA1BI,2CAAH,sDA8BXpI,EAAS,uCAAG,WAAOwB,GAAP,uCAAAuE,EAAA,6DAAWsC,EAAX,+BAAqB,KAArB,kBAEK9B,GAAc/E,GAFnB,gBAIP6G,GAMGC,EADD,UACcnB,EAAY3D,cAD1B,aACc,EAAoB+E,WAAU,SAAC3E,GAChD,OAAOA,EAAMpC,KAAO6G,KAEhBG,EAJD,mBAIgBrB,QAJhB,IAIgBA,OAJhB,EAIgBA,EAAa3D,QAC5BsD,EALD,UAKW0B,EAASF,GAAYvI,YALhC,aAKW,EAA2BoI,QACzC,SAACjH,GAAD,OAASA,EAAIM,KAAOA,KAEtBgH,EAASF,GAAYvI,KAAO+G,EAC5BM,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkB9D,OAAQgF,SAdtB1B,EAAUK,EAAYpH,KAAKoI,QAAO,SAACjH,GAAD,OAASA,EAAIM,KAAOA,KAC5D4F,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBvH,KAAM+G,SAPhB,gDAwBdpD,QAAQC,IAAR,MAxBc,yDAAH,sDA4BT8E,EAAY,SAACjH,GACjB,IAAIkH,EACO,gBAAPlH,EAEFkH,EADcvB,EAAY3D,OAAOyE,MAAK,SAACrE,GAAD,OAAWA,EAAMpC,KAAO0G,OAAO1G,MACvDzB,KAEd2I,EAAQvB,EAAYpH,KAEtB,OAAO,YAAI2I,IAGPC,EAAc,uCAAG,WAAOC,EAAOP,GAAd,eAAAtC,EAAA,6DACf8C,EAA4B,gBAAZR,EAA4B,KAAOA,EADpC,SAEf5B,GAASmC,EAAO,CAAEP,QAASQ,IAFZ,2CAAH,wDAIdC,EAAS,uCAAG,WAAOC,GAAP,mCAAAhD,EAAA,yDACRiD,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,YADA,oDAOZD,EAAOvI,cAAgBwI,EAAYxI,YAPvB,iBAQRyI,EAAcT,EAAUO,EAAOvI,aARvB,EASIyI,EAAYC,OAAOH,EAAO7H,MAAO,GATrC,mBASPiI,EATO,KAUdF,EAAYC,OAAOF,EAAY9H,MAAO,EAAGiI,GACd,gBAAvBJ,EAAOvI,aACT2G,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBvH,KAAMmJ,OAGD,gBAAvBF,EAAOvI,aACT2G,GAAe,SAACE,GACd,IAAM+B,EAAS,YAAO/B,EAAK9D,QACrB8E,EAAae,EAAUd,WAAU,SAAC3E,GACtC,OAAOA,EAAMpC,KAAO0G,OAAOc,EAAOvI,gBAMpC,OAJA4I,EAAUf,GAAV,2BACKe,EAAUf,IADf,IAEEvI,KAAMmJ,IAED,2BAAK5B,GAAZ,IAAkB9D,OAAQ6F,OA1BhB,+BA8BRH,EAAcT,EAAUO,EAAOvI,aAC/B6I,EAAmBb,EAAUQ,EAAYxI,aA/BjC,EAgCIyI,EAAYC,OAAOH,EAAO7H,MAAO,GAhCrC,mBAgCPiI,EAhCO,eAiCRT,EAAeS,EAAQ5H,GAAIyH,EAAYxI,aAjC/B,QAmCd6I,EAAiBH,OAAOF,EAAY9H,MAAO,EAAGiI,GAEnB,gBAAvBJ,EAAOvI,aACT2G,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBvH,KAAMmJ,OAGD,gBAAvBF,EAAOvI,aACT2G,GAAe,SAACE,GACd,IAAM+B,EAAS,YAAO/B,EAAK9D,QAErB8E,EAAae,EAAUd,WAC3B,SAAC3E,GAAD,OAAWA,EAAMpC,KAAO0G,OAAOc,EAAOvI,gBAMxC,OAJA4I,EAAUf,GAAV,2BACKe,EAAUf,IADf,IAEEvI,KAAMmJ,IAED,2BAAK5B,GAAZ,IAAkB9D,OAAQ6F,OAGE,gBAA5BJ,EAAYxI,aACd2G,GAAe,SAACE,GACd,OAAO,2BAAKA,GAAZ,IAAkBvH,KAAMuJ,OAII,gBAA5BL,EAAYxI,aACd2G,GAAe,SAACE,GACd,IAAM+B,EAAS,YAAO/B,EAAK9D,QAErB8E,EAAae,EAAUd,WAC3B,SAAC3E,GAAD,OAAWA,EAAMpC,KAAO0G,OAAOe,EAAYxI,gBAM7C,OAJA4I,EAAUf,GAAV,2BACKe,EAAUf,IADf,IAEEvI,KAAMuJ,IAED,2BAAKhC,GAAZ,IAAkB9D,OAAQ6F,OAzEhB,4CAAH,sDA+Ef,OACE,qBAAK9I,MAAO,CAAEC,OAAQ,UAAtB,SACE,eAACL,EAAA,EAAD,CAAMC,WAAS,EAACsE,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAA5D,UACE,eAACzE,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACwD,GAAI,GAAI0F,GAAI,EAAGnK,QAAS,EAA7C,UACE,cAACe,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIkJ,GAAI,EAAGD,GAAI,GAA9B,SACE,cAAC,EAAD,CAAS9E,OAAQA,MAEnB,cAACtE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIkJ,GAAI,EAAGD,GAAI,GAA9B,SACE,cAAC,GAAD,CAAW1D,SAAUA,SAIzB,cAAC1F,EAAA,EAAD,CACEE,MAAI,EACJwD,GAAI,GACJ0F,GAAI,EACJnJ,WAAS,EACTsE,UAAU,MACVC,QAAQ,SACRC,WAAW,SAPb,SASE,eAAC,IAAD,CAAiBkE,UAAWA,EAA5B,UACE,cAAC3I,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJqE,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXxF,QAAS,EANX,SAQE,cAAC,EAAD,CAAMW,KAAMoH,EAAYpH,KAAMC,UAAWA,MAG3C,cAACG,EAAA,EAAD,CACEC,WAAS,EACTC,MAAI,EACJqE,UAAU,MACVC,QAAQ,SACRC,WAAW,SACXxF,QAAS,EANX,SAQE,cAAC,EAAD,CACEoE,OAAQ2D,EAAY3D,OACpBC,YAAaA,EACbzD,UAAWA,iBC/QZyJ,OATf,WACE,OACE,sBAAKlJ,MAAO,CAAEmJ,UAAW,UAAzB,UACE,cAAC,EAAD,IACA,cAAC,GAAD,QCqBSC,OAzBf,WAAqB,IACbtH,EAAauH,cAAbvH,SACApC,EAAUC,cAoBhB,OAnBAmH,qBAAU,YACO,uCAAG,sBAAAtB,EAAA,sEACVC,KACHC,IADG,oBACc5D,IACjBwH,KAFG,+BAAA9D,EAAA,MAEE,6BAAAA,EAAA,yDAASG,EAAT,EAASA,KACbxC,QAAQC,IAAIuC,KADR,OAEAA,QAFA,IAEAA,OAFA,EAEAA,EAAMnE,SAFN,gCAGI6E,GAAmB,OAACV,QAAD,IAACA,OAAD,EAACA,EAAM1E,IAH9B,OAIF0B,OAAOC,SAAP,mBAAuB+C,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMnE,SAJ3B,sBAMF9B,EAAQ4C,KAAK,KANX,2CAFF,uDAWHiH,OAAM,SAACC,GACNrG,QAAQC,IAAIoG,MAbA,2CAAH,qDAgBfC,KACC,CAAC3H,EAAUpC,IACP,8BCPMgK,OAdf,WACE,OACE,sBAAKzK,UAAU,MAAf,UACE,cAAC0K,EAAA,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAAClF,UAAWuE,KACjC,cAAC,IAAD,CAAOU,KAAK,aAAajF,UAAWyE,cCD/BU,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.7f599b7d.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"body1\" className={classes.title}>\n            Short Link\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { memo } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  Grid,\n  IconButton,\n  ListItemText,\n  ListItem,\n  List,\n  Paper,\n  ListItemAvatar,\n  Avatar,\n  Tooltip,\n} from \"@material-ui/core\";\n\nfunction Urls({ urls, deleteUrl }) {\n  const history = useHistory();\n\n  const copiedToClipboard = (shortURL) => {\n    navigator.clipboard.writeText(`${window.location.host}/${shortURL}`);\n  };\n  const goesTo = (shortURL) => {\n    history.push({ pathname: shortURL });\n  };\n  return (\n    <>\n      <Grid container item xs={12} spacing={1} style={{ margin: \"10px 0\" }}>\n        <Grid item xs={12}>\n          <Droppable droppableId=\"noGroupUrls\">\n            {(provided) => {\n              return (\n                <Paper\n                  elevation={3}\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  style={{ minHeight: \"250px\" }}\n                >\n                  {urls.map((url, index) => {\n                    return (\n                      <List key={url.id} dense={true}>\n                        <Draggable\n                          key={url.id}\n                          draggableId={String(url.id)}\n                          index={index}\n                        >\n                          {(provided) => (\n                            <ListItem\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <ListItemAvatar>\n                                <Avatar alt={url.fullUrl} src={url.favicons} />\n                              </ListItemAvatar>\n                              <ListItemText\n                                primary={url.alias || url.shortUrl}\n                                secondary={url.fullUrl || null}\n                              />\n                              <ListItemText\n                                primary=\"Redirected\"\n                                secondary={url.counter}\n                              />\n\n                              <Tooltip title=\"Go To\">\n                                <IconButton\n                                  aria-label=\"redirect\"\n                                  onClick={() => goesTo(url?.shortUrl)}\n                                >\n                                  <ExitToAppIcon />\n                                </IconButton>\n                              </Tooltip>\n\n                              <Tooltip title=\"copy\">\n                                <IconButton\n                                  aria-label=\"copy\"\n                                  onClick={() =>\n                                    copiedToClipboard(url?.shortUrl)\n                                  }\n                                >\n                                  <FileCopyIcon />\n                                </IconButton>\n                              </Tooltip>\n                              <Tooltip title=\"delete\">\n                                <IconButton\n                                  aria-label=\"delete\"\n                                  onClick={() => deleteUrl(url.id)}\n                                >\n                                  <DeleteIcon />\n                                </IconButton>\n                              </Tooltip>\n                            </ListItem>\n                          )}\n                        </Draggable>\n                      </List>\n                    );\n                  })}\n                  {provided.placeholder}\n                </Paper>\n              );\n            }}\n          </Droppable>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\nexport default memo(Urls);\n","import React from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { useHistory } from \"react-router-dom\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {\n  Grid,\n  IconButton,\n  ListItemText,\n  ListItem,\n  List,\n  Paper,\n  Typography,\n  ListItemAvatar,\n  Avatar,\n  Tooltip,\n} from \"@material-ui/core\";\n\nfunction Groups({ groups, deleteGroup, deleteUrl }) {\n  const history = useHistory();\n  const copiedToClipboard = (shortURL) => {\n    navigator.clipboard.writeText(`${window.location.host}/${shortURL}`);\n  };\n  const goesTo = (shortURL) => {\n    history.push({ pathname: shortURL });\n  };\n  console.log();\n  return (\n    <>\n      {groups.map((group) => {\n        return (\n          <Grid container item xs={12} md={6} key={group.id} spacing={1}>\n            <Grid item xs={12}>\n              <Paper elevation={3}>\n                <Typography variant=\"body1\">\n                  {group.name}\n                  {group.id}\n                </Typography>\n\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => deleteGroup(group.id)}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Droppable droppableId={`${group.id}`}>\n                {(provided) => {\n                  return (\n                    <Paper\n                      elevation={3}\n                      {...provided.droppableProps}\n                      ref={provided.innerRef}\n                      style={{ minHeight: \"250px\" }}\n                    >\n                      {group.urls?.map((link, index) => {\n                        return (\n                          <List key={link.id} dense={true}>\n                            <Draggable\n                              key={link.id}\n                              draggableId={String(link.id)}\n                              index={index}\n                            >\n                              {(provided) => (\n                                <ListItem\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                >\n                                  <ListItemAvatar>\n                                    <Avatar\n                                      alt={link.fullUrl}\n                                      src={link.favicons}\n                                    />\n                                  </ListItemAvatar>\n\n                                  <ListItemText\n                                    primary={link.alias || link.shortUrl}\n                                    secondary={link.fullUrl || null}\n                                  />\n                                  <ListItemText\n                                    primary=\"Redirected\"\n                                    secondary={link.counter}\n                                  />\n                                  <Tooltip title=\"Go To\">\n                                    <IconButton\n                                      aria-label=\"redirect\"\n                                      onClick={() => goesTo(link?.shortUrl)}\n                                    >\n                                      <ExitToAppIcon />\n                                    </IconButton>\n                                  </Tooltip>\n\n                                  <Tooltip title=\"copy\">\n                                    <IconButton\n                                      aria-label=\"copy\"\n                                      onClick={() =>\n                                        copiedToClipboard(link?.shortUrl)\n                                      }\n                                    >\n                                      <FileCopyIcon />\n                                    </IconButton>\n                                  </Tooltip>\n                                  <Tooltip title=\"delete\">\n                                    <IconButton\n                                      aria-label=\"delete\"\n                                      onClick={() =>\n                                        deleteUrl(link.id, group.id)\n                                      }\n                                    >\n                                      <DeleteIcon />\n                                    </IconButton>\n                                  </Tooltip>\n                                </ListItem>\n                              )}\n                            </Draggable>\n                          </List>\n                        );\n                      })}\n                      {provided.placeholder}\n                    </Paper>\n                  );\n                }}\n              </Droppable>\n            </Grid>\n          </Grid>\n        );\n      })}\n    </>\n  );\n}\nexport default Groups;\n","import React from \"react\";\nimport { TextField } from \"formik-material-ui\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Paper, Grid } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst UrlSchema = Yup.object().shape({\n  fullUrl: Yup.string()\n    .matches(\n      /((https?):\\/\\/)?(www.)?[a-z0-9-]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#-]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/,\n      \"Enter correct url!\"\n    )\n    .required(\"Required\"),\n  shortUrl: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\"),\n  alias: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(2),\n      width: \"25ch\",\n    },\n  },\n}));\n\nfunction UrlForm({ addUrl }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <Formik\n            initialValues={{\n              fullUrl: \"\",\n              shortUrl: \"\",\n              alias: \"\",\n            }}\n            validationSchema={UrlSchema}\n            onSubmit={addUrl}\n          >\n            <Paper elevation={3} style={{ minWidth: \"240px\" }}>\n              <Form className={classes.root} style={{ padding: \".5em\" }}>\n                <Field\n                  component={TextField}\n                  name=\"fullUrl\"\n                  type=\"text\"\n                  label=\"Full Url\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Field\n                  component={TextField}\n                  name=\"shortUrl\"\n                  type=\"text\"\n                  label=\"Short Url\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n\n                <Field\n                  component={TextField}\n                  name=\"alias\"\n                  type=\"text\"\n                  label=\"Alias\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  endIcon={<SaveIcon />}\n                >\n                  Submit\n                </Button>\n              </Form>\n            </Paper>\n          </Formik>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default UrlForm;\n","import React from \"react\";\nimport { TextField } from \"formik-material-ui\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik, Field, Form } from \"formik\";\nimport { FormGroup, Button, Paper, Grid } from \"@material-ui/core\";\n\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport * as Yup from \"yup\";\n\nconst GroupSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\n\nfunction GroupForm({ addGroup }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs={6}>\n          <Formik\n            initialValues={{\n              name: \"\",\n            }}\n            validationSchema={GroupSchema}\n            onSubmit={addGroup}\n          >\n            <Paper elevation={3} style={{ minWidth: \"240px\" }}>\n              <Form className={classes.root} style={{ padding: \".5em\" }}>\n                <Field\n                  component={TextField}\n                  name=\"name\"\n                  type=\"text\"\n                  label=\"Group Name\"\n                  variant=\"outlined\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                />\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                  endIcon={<SaveIcon />}\n                >\n                  Submit\n                </Button>\n              </Form>\n            </Paper>\n          </Formik>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default GroupForm;\n","import axios from \"axios\";\n\nexport const getNoGroupUrls = async () => {\n  const { data = [] } = await axios.get(\"/api/urls\");\n  const newData = data?.map((url) => {\n    return {\n      ...url,\n      favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${url.fullUrl}`,\n    };\n  });\n  return newData;\n};\n\nexport const addNewUrl = async (values) => {\n  const { data } = await axios.post(\"/api/urls\", { ...values });\n\n  const newData = {\n    ...data,\n    favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${data.fullUrl}`,\n  };\n\n  return newData;\n};\n\nexport const deleteUrlById = async (id) => {\n  const { data } = await axios.delete(`/api/urls/${id}`);\n  return data;\n};\n\nexport const patchUrl = async (id, fields) => {\n  const { data } = await axios.patch(`/api/urls/${id}`, fields);\n  return data;\n};\n\nexport const incrementUrlCounter = async (id) => {\n  const { data } = await axios.patch(`/api/urls/${id}/count`);\n  return data;\n};\n","import axios from \"axios\";\n\nexport const getGroupUrls = async () => {\n  const { data = [] } = await axios.get(\"/api/groups\");\n\n  const newData = data?.map((group) => {\n    const newUrls = group.urls?.map((url) => {\n      return {\n        ...url,\n        favicons: `https://www.google.com/s2/favicons?sz=32&domain_url=${url.fullUrl}`,\n      };\n    });\n    return { ...group, urls: newUrls };\n  });\n\n  return newData;\n};\n\nexport const addNewGroup = async (values) => {\n  const { data } = await axios.post(\"/api/groups\", { ...values });\n  return data;\n};\n\nexport const deleteGroupById = async (id) => {\n  const { data } = await axios.delete(`/api/groups/${id}`);\n  return data;\n};\n","import { Grid } from \"@material-ui/core\";\n\nimport React, { useEffect, useState } from \"react\";\nimport Urls from \"./Urls\";\nimport Group from \"./Groups\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport UrlForm from \"./UrlForm\";\nimport GroupForm from \"./GroupForm\";\n\nimport {\n  getNoGroupUrls,\n  addNewUrl,\n  deleteUrlById,\n  patchUrl,\n} from \"../api/urlRequest\";\nimport {\n  getGroupUrls,\n  addNewGroup,\n  deleteGroupById,\n} from \"../api/groupRequest\";\n\nfunction MainDisplay() {\n  const [groupOfUrls, setGroupOfUrls] = useState({ urls: [], groups: [] });\n\n  useEffect(() => {\n    const getUrls = async () => {\n      try {\n        const urls = await getNoGroupUrls();\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls };\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getUrls();\n  }, []);\n\n  useEffect(() => {\n    const getGroup = async () => {\n      try {\n        const groups = await getGroupUrls();\n        setGroupOfUrls((prev) => {\n          return { ...prev, groups };\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getGroup();\n  }, []);\n\n  const addUrl = async (\n    { shortUrl, alias, ...rest },\n    { setSubmitting, setErrors, resetForm }\n  ) => {\n    try {\n      const fields = { ...rest };\n      if (shortUrl) {\n        fields.shortUrl = shortUrl;\n      }\n      if (alias) {\n        fields.alias = alias;\n      }\n      const newUrl = await addNewUrl(fields);\n      resetForm({});\n      setGroupOfUrls((prev) => {\n        return { ...prev, urls: [...prev.urls, newUrl] };\n      });\n    } catch (error) {\n      console.log(error, error.message);\n      setSubmitting(false);\n      setErrors({ submit: error.message });\n    }\n  };\n\n  const addGroup = async (values, { setSubmitting, setErrors, resetForm }) => {\n    try {\n      const data = await addNewGroup(values);\n      resetForm({});\n      setGroupOfUrls((prev) => {\n        return { ...prev, groups: [...prev.groups, { ...data, urls: [] }] };\n      });\n    } catch (error) {\n      setSubmitting(false);\n      setErrors({ submit: error.message });\n    }\n  };\n\n  const deleteGroup = async (id) => {\n    try {\n      const data = deleteGroupById(id);\n      if (data) {\n        const deletedGroup = groupOfUrls.groups?.find(\n          (group) => group.id === Number(id)\n        );\n\n        setGroupOfUrls((prev) => {\n          return {\n            ...prev,\n            groups: [...prev.groups].filter((group) => {\n              return group.id !== id;\n            }),\n            urls: [...prev.urls, ...deletedGroup.urls],\n          };\n        });\n\n        // setGroups((prev) =>\n        //   [...prev]?.filter((group) => {\n        //     return group.id !== id;\n        //   })\n        // );\n        // setUrls((prev) => [...prev, ...deletedGroup.urls]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const deleteUrl = async (id, groupId = null) => {\n    try {\n      const data = await deleteUrlById(id);\n      if (data) {\n        if (!groupId) {\n          const newUrls = groupOfUrls.urls.filter((url) => url.id !== id);\n          setGroupOfUrls((prev) => {\n            return { ...prev, urls: newUrls };\n          });\n        } else {\n          const groupIndex = groupOfUrls.groups?.findIndex((group) => {\n            return group.id === groupId;\n          });\n          const newGroup = [...groupOfUrls?.groups];\n          const newUrls = newGroup[groupIndex].urls?.filter(\n            (url) => url.id !== id\n          );\n          newGroup[groupIndex].urls = newUrls;\n          setGroupOfUrls((prev) => {\n            return { ...prev, groups: newGroup };\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const findArray = (id) => {\n    let array;\n    if (id !== \"noGroupUrls\") {\n      const group = groupOfUrls.groups.find((group) => group.id === Number(id));\n      array = group.urls;\n    } else {\n      array = groupOfUrls.urls;\n    }\n    return [...array];\n  };\n\n  const updateUrlGroup = async (urlId, groupId) => {\n    const formatGroupId = groupId === \"noGroupUrls\" ? null : groupId;\n    await patchUrl(urlId, { groupId: formatGroupId });\n  };\n  const onDragEnd = async (result) => {\n    const { source, destination } = result;\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n\n    if (source.droppableId === destination.droppableId) {\n      const sourceArray = findArray(source.droppableId);\n      const [removed] = sourceArray.splice(source.index, 1);\n      sourceArray.splice(destination.index, 0, removed);\n      if (source.droppableId === \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls: sourceArray };\n        });\n      }\n      if (source.droppableId !== \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n          const groupIndex = newGroups.findIndex((group) => {\n            return group.id === Number(source.droppableId);\n          });\n          newGroups[groupIndex] = {\n            ...newGroups[groupIndex],\n            urls: sourceArray,\n          };\n          return { ...prev, groups: newGroups };\n        });\n      }\n    } else {\n      const sourceArray = findArray(source.droppableId);\n      const destinationArray = findArray(destination.droppableId);\n      const [removed] = sourceArray.splice(source.index, 1);\n      await updateUrlGroup(removed.id, destination.droppableId);\n\n      destinationArray.splice(destination.index, 0, removed);\n\n      if (source.droppableId === \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls: sourceArray };\n        });\n      }\n      if (source.droppableId !== \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n\n          const groupIndex = newGroups.findIndex(\n            (group) => group.id === Number(source.droppableId)\n          );\n          newGroups[groupIndex] = {\n            ...newGroups[groupIndex],\n            urls: sourceArray,\n          };\n          return { ...prev, groups: newGroups };\n        });\n      }\n      if (destination.droppableId === \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          return { ...prev, urls: destinationArray };\n        });\n      }\n\n      if (destination.droppableId !== \"noGroupUrls\") {\n        setGroupOfUrls((prev) => {\n          const newGroups = [...prev.groups];\n\n          const groupIndex = newGroups.findIndex(\n            (group) => group.id === Number(destination.droppableId)\n          );\n          newGroups[groupIndex] = {\n            ...newGroups[groupIndex],\n            urls: destinationArray,\n          };\n          return { ...prev, groups: newGroups };\n        });\n      }\n    }\n  };\n\n  return (\n    <div style={{ margin: \"20px 0\" }}>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Grid container item md={12} lg={4} spacing={2}>\n          <Grid item xs={12} sm={6} lg={12}>\n            <UrlForm addUrl={addUrl} />\n          </Grid>\n          <Grid item xs={12} sm={6} lg={12}>\n            <GroupForm addGroup={addGroup} />\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          md={12}\n          lg={8}\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <DragDropContext onDragEnd={onDragEnd}>\n            <Grid\n              container\n              item\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Urls urls={groupOfUrls.urls} deleteUrl={deleteUrl} />\n            </Grid>\n\n            <Grid\n              container\n              item\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              spacing={2}\n            >\n              <Group\n                groups={groupOfUrls.groups}\n                deleteGroup={deleteGroup}\n                deleteUrl={deleteUrl}\n              />\n            </Grid>\n          </DragDropContext>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default MainDisplay;\n","import React from \"react\";\n\nimport AppBar from \"./AppBar\";\nimport MainDisplay from \"./MainDisplay\";\n\nfunction Main() {\n  return (\n    <div style={{ overflowX: \"hidden\" }}>\n      <AppBar />\n      <MainDisplay />\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { incrementUrlCounter } from \"../api/urlRequest\";\n\nfunction Redirect() {\n  let { shortUrl } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios\n        .get(`/api/urls/${shortUrl}`)\n        .then(async ({ data }) => {\n          console.log(data);\n          if (data?.fullUrl) {\n            await incrementUrlCounter(data?.id);\n            window.location = `//${data?.fullUrl}`;\n          } else {\n            history.push(\"/\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n    fetchData();\n  }, [shortUrl, history]);\n  return <></>;\n}\n\nexport default Redirect;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Main from \"./components/Main\";\nimport Redirect from \"./components/Redirect\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/:shortUrl\" component={Redirect} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}